<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ContinousDemocracyAPI</name>
    </assembly>
    <members>
        <member name="M:ContinousDemocracyAPI.Controllers.PartyController.GetAllPartys(System.Boolean,System.Int32)">
            <summary>
            Retrieves a list of parties based on their active status and a specified limit.
            </summary>
            <remarks>This method queries the party service to retrieve the requested parties. If no
            parties match the criteria, a 404 Not Found response is returned with an appropriate message.</remarks>
            <param name="active">A value indicating whether to retrieve only active parties. If <see langword="true"/>, only active parties
            are returned; otherwise, inactive parties are included.</param>
            <param name="number">The maximum number of parties to retrieve. The default value is 100.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult`1"/> containing the list of parties if found; otherwise, a 404 Not Found
            response.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.PartyController.GetPartyById(System.Guid)">
            <summary>
            Retrieves a party by its unique identifier.
            </summary>
            <param name="id">The unique identifier of the party to retrieve.</param>
            <returns>An HTTP 200 response containing the party details as a string if the party is found;  otherwise, an HTTP 404
            response with a "Party not found" message.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.PartyController.GetParty(System.String,System.String)">
            <summary>
            Retrieves party information based on the specified query parameters.
            </summary>
            <remarks>At least one of the query parameters, <paramref name="name"/> or <paramref
            name="acronym"/>, should be provided to perform a meaningful search. If both parameters are null or empty,
            the method may return a 404 response.</remarks>
            <param name="name">The name of the party to search for. This parameter is optional.</param>
            <param name="acronym">The acronym of the party to search for. This parameter is optional.</param>
            <returns>An HTTP 200 response containing the party information as a string if a matching party is found; otherwise,
            an HTTP 404 response with a message indicating that no party matches the specified criteria.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.PoliticiansController.GetPoliticianById(System.Guid)">
            <summary>
            Retrieves a politician's details by their unique identifier.
            </summary>
            <remarks>This method uses the <see cref="T:Microsoft.AspNetCore.Mvc.HttpGetAttribute"/> to handle HTTP GET requests. 
            Ensure the provided <paramref name="id"/> corresponds to an existing politician in the system.</remarks>
            <param name="id">The unique identifier of the politician to retrieve.</param>
            <returns>An HTTP 200 OK response containing the politician's details as a string if found;  otherwise, an HTTP 404
            Not Found response with an error message.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.PoliticiansController.GetPoliticianByName(System.String)">
            <summary>
            Retrieves a politician's details by their name.
            </summary>
            <remarks>This method queries the underlying data source for a politician matching the
            specified name. If no match is found, a 404 Not Found response is returned.</remarks>
            <param name="name">The name of the politician to search for. This parameter is case-insensitive.</param>
            <returns>An HTTP 200 OK response containing the politician's details as a string if found;  otherwise, an HTTP 404
            Not Found response with an error message.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.PoliticiansController.GetAllPoliticians(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{ParliamentMonitor.Contracts.Model.WorkLocation},System.Nullable{ParliamentMonitor.Contracts.Model.Gender},System.Int32)">
            <summary>
            Retrieves a list of politicians based on the specified filter criteria.
            </summary>
            <remarks>This method allows filtering politicians by various criteria, such as party
            affiliation, activity status,  work location, and gender. If no filter criteria are provided, the method
            returns up to the specified  number of politicians (default is 100).</remarks>
            <param name="partyAcronym">The acronym of the political party to filter by. Optional.</param>
            <param name="partyName">The name of the political party to filter by. Optional.</param>
            <param name="isActive">Specifies whether to filter by active politicians. If <see langword="true"/>, only active politicians are
            returned; if <see langword="false"/>, only inactive politicians are returned. Optional.</param>
            <param name="location">The work location to filter politicians by. Optional.</param>
            <param name="gender">The gender to filter politicians by. Optional.</param>
            <param name="number">The maximum number of politicians to retrieve. Must be a positive integer. Defaults to 100.</param>
            <returns>An HTTP 200 OK response containing a JSON-encoded list of politicians matching the specified criteria,  or
            an HTTP 404 Not Found response if no politicians match the criteria.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.VotingController.GetAllRounds(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String[],System.Int32)">
            <summary>
            Retrieves a list of voting rounds from the database based on the specified date range and maximum number of
            entries.
            </summary>
            <remarks>This method queries the database for voting rounds that match the specified criteria.
            If no criteria are provided, all available rounds up to the specified maximum are returned.</remarks>
            <param name="startDate">The optional start date to filter the voting rounds. Only rounds occurring on or after this date will be
            included. If null, no lower date limit is applied.</param>
            <param name="endDate">The optional end date to filter the voting rounds. Only rounds occurring on or before this date will be
            included. If null, no upper date limit is applied.</param>
            <param name="maxNumberOfEntries">The maximum number of voting rounds to retrieve. Must be a positive integer. Defaults to 100.</param>
            <returns>An HTTP 200 OK response containing the list of voting rounds if any are found;  otherwise, an HTTP 404 Not
            Found response with a message indicating no results were available.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.VotingController.GetVotingRoundByVoteId(System.Int32)">
            <summary>
            Retrieves the voting round associated with the specified vote number.
            </summary>
            <remarks>This method queries the voting round service to retrieve the voting round associated
            with the given vote ID. If no voting round is found for the specified ID, a 404 Not Found response is
            returned.</remarks>
            <param name="voteNumber">The number of the vote for which the voting round is requested.</param>
            <returns>An HTTP 200 OK response containing the voting round as a string if found;  otherwise, an HTTP 404 Not Found
            response with an error message.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.VotingController.GetVotesForRound(System.Int32,System.Nullable{System.Guid},System.String)">
            <summary>
            Gets all the votes for a given <see cref="T:ParliamentMonitor.Contracts.Model.Votes.Round"/>.
            </summary>
            <param name="number">MANDATORY - The integer that identifies the <see cref="T:ParliamentMonitor.Contracts.Model.Votes.Round"/></param>
            <param name="partyId">The <see cref="T:ParliamentMonitor.Contracts.Model.Party"/> id to filter the votes by</param>
            <param name="partyAcronim">The acronym of a given <see cref="T:ParliamentMonitor.Contracts.Model.Party"/> to filter the votes by</param>
            <returns>List of <see cref="T:ParliamentMonitor.Contracts.Model.Votes.Vote"/> for a law in a <see cref="T:ParliamentMonitor.Contracts.Model.Votes.Round"/>.</returns>
        </member>
        <member name="M:ContinousDemocracyAPI.Controllers.VotingController.GetAllVotesForARoundById(System.Guid)">
            <summary>
            Retrieves all votes associated with a specific round by its unique identifier.
            </summary>
            <remarks>This method queries the voting service to retrieve all votes for the specified round.
            Ensure that the <paramref name="roundId"/> is a valid and existing round identifier.</remarks>
            <param name="roundId">The unique identifier of the round for which votes are to be retrieved.</param>
            <returns>An HTTP 200 OK response containing the votes as a JSON string if found;  otherwise, an HTTP 404 Not Found
            response with an appropriate error message.</returns>
        </member>
    </members>
</doc>
