// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ParliamentMonitor.DataBaseConnector;

#nullable disable

namespace ParliamentMonitor.DataBaseConnector.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250602120242_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ParliamentMonitor.Contracts.Model.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("ParliamentMonitor.Contracts.Model.Politician", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uuid");

                    b.Property<int>("WorkLocation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Politicians");
                });

            modelBuilder.Entity("ParliamentMonitor.Contracts.Model.Votes.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PoliticianId")
                        .HasColumnType("uuid");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoundId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PoliticianId");

                    b.HasIndex("RoundId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("ParliamentMonitor.Contracts.Model.Votes.VotingRound", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VoteDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("ParliamentMonitor.Contracts.Model.Politician", b =>
                {
                    b.HasOne("ParliamentMonitor.Contracts.Model.Party", "Party")
                        .WithMany("Politicians")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("ParliamentMonitor.Contracts.Model.Votes.Vote", b =>
                {
                    b.HasOne("ParliamentMonitor.Contracts.Model.Politician", "Politician")
                        .WithMany()
                        .HasForeignKey("PoliticianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParliamentMonitor.Contracts.Model.Votes.VotingRound", "Round")
                        .WithMany("VoteResults")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Politician");

                    b.Navigation("Round");
                });

            modelBuilder.Entity("ParliamentMonitor.Contracts.Model.Party", b =>
                {
                    b.Navigation("Politicians");
                });

            modelBuilder.Entity("ParliamentMonitor.Contracts.Model.Votes.VotingRound", b =>
                {
                    b.Navigation("VoteResults");
                });
#pragma warning restore 612, 618
        }
    }
}
